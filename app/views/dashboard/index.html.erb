  <div class="col-sm-9 col-sm-offset-3 col-lg-10 col-lg-offset-2 main" style="<%= 'margin: 0' if !user_signed_in? %>">     
    
    <div class="row">
      <ol class="breadcrumb">
        <li><a href="#"><svg class="glyph stroked home"><use xlink:href="#stroked-home"></use></svg></a></li>
        <li class="active">Icons</li>
      </ol>
    </div><!--/.row-->
    
    <div class="row">
      <div class="col-lg-12">
        <h1 class="page-header">Dashboard</h1>
      </div>
    </div><!--/.row-->
        
    <div class="row">
      <div class="col-lg-12">
        <div class="panel panel-default">
          <div class="panel-heading">Events Around You</div>
          <div class="panel-body">
            <div id="map" class="col s12" style="height: 500px;width: 100%;"></div>
          </div>
        </div>
      </div>
    </div><!--/.row-->
                                    
      <div class="col-lg-12">
        <div class="panel panel-blue">
          <div class="panel-heading dark-overlay"><svg class="glyph stroked clipboard-with-paper"><use xlink:href="#stroked-clipboard-with-paper"></use></svg>To-do List</div>
          <div class="panel-body">
            <ul class="todo-list" id="ajaxTodoList">
              <% @todo_items.each do |todo_item| %>
                <li class="todo-list-item" id="todoList<%= todo_item.id %>">
                  <div class="checkbox">
                    <input type="checkbox" id="todoItem<%= todo_item.id %>" />
                    <label for="todoItem<%= todo_item.id %>"><%= todo_item.content %></label>
                  </div>
                  <div class="pull-right action-buttons">
                    <a href="javascript:void(0)" onclick="deleteTodo(<%= todo_item.id %>, '<%= todo_item_todo_list_path(todo_item.todo_list, todo_item) %>')">Delete</a>
                  </div>
                </li> 
              <% end %>
            </ul>
          </div>
              <form id="addTaskForm" action="<%= add_todo_item_todo_list_path(@todo_list) %>" method="POST">
          <div class="panel-footer">
            <div class="input-group">
                <input name="todo_item[content]" id="todoInput" type="text" class="form-control input-md" placeholder="Add new task" />
                <span class="input-group-btn">
                  <button class="btn btn-primary btn-md" id="btn-todo">Add</button>
                </span>
            </div>
          </div>
              </form>
        </div>
        </div>

        <script type="text/javascript">
          $(document).ready(function(){
              $('#addTaskForm').on('submit', function(e){
                  e.preventDefault();
                  $.post(this.action, $('#addTaskForm').serialize())
                    .success(function(result){
                      result = JSON.parse(result);
                      var li = '<li class="todo-list-item" id="todoList'+ result.id +'">'+
                                  '<div class="checkbox">'+
                                    '<input type="checkbox" id="todoItem'+ result.id +'" />'+
                                    '<label for="todoItem'+ result.id +'">'+ result.content +'</label>'+
                                  '</div>'+
                                  '<div class="pull-right action-buttons">'+
                                    '<a href="javascript:void(0)" onclick=\'deleteTodo('+ result.id +', "/todo_lists/<%= @todo_list.id %>/todo_item/'+ result.id +'")\'>Delete</a>' +
                                  '</div>'+
                                '</li>'
                      $('#ajaxTodoList').append(li)
                      $('#todoInput').val("")
                    });
              });
          });
          function deleteTodo(id, url){
            $.ajax({
                url: url,
                type: 'DELETE',
                success: function(result) {
                    $('#todoList'+ id).remove();
                }
            });
            return false;
          }
        </script>

    <div class="row">
      <div class="col-lg-12">
        <div class="panel panel-default">
          <div class="panel-heading">My Planner</div>
          <div class="panel-body">
            <div id="authorize-div" style="display: none">
              <span>Authorize access to Google Calendar API</span>
              <!--Button for the user to click to initiate auth sequence -->
              <button id="authorize-button" onclick="handleAuthClick(event)">Authorize</button>
            </div>
            <pre id="output"></pre>
          </div>
        </div>
      </div>
    </div><!--/.row-->

<!-- Optional Feature 3: ChatBox, using chatango.com (3rd party app) -->
    <div class="row">

          <div class="col-md-4">
        <div class="panel panel-red">
          <div class="panel-heading dark-overlay"><svg class="glyph stroked calendar"><use xlink:href="#stroked-calendar"></use></svg>Calendar</div>
          <div class="panel-body">
          <div id="calendar"></div>
        </div>
        </div>
      </div>

      
      <div class="col-md-8">
        <div class="panel panel-default">
          <div class="panel-heading">Chatbox</div>
          <div class="panel-body">
           <div style="width:100%; height:100%">
           <script id="cid0020000121016808980" data-cfasync="false" async src="//st.chatango.com/js/gz/emb.js" style="width: 250px;height: 250px;">{"handle":"fypshowcase1516","arch":"js","styles":{"a":"000066","b":100,"c":"FFFFFF","d":"FFFFFF","k":"000066","l":"000066","m":"000066","n":"FFFFFF","p":"10","q":"000066","r":100,"fwtickm":1}}</script>
            </div>
          </div>
          </div>
        </div>
      </div>

     
  </div>  <!--/.main-->

<script>
      var map;
      var markers = [];
      var user_marker;
      var events = [];

      $(document).ready(function() {
        var req = $.get("<%= all_occasions_path format: :json %>");

        $.when(req).done(function(res) {
          events = res;
        })

        getLocation();
      })

      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 15,
          center: userLatLong
        });
        user_marker = new google.maps.Marker({
          icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
          position: userLatLong,
          map: map,
          animation: google.maps.Animation.DROP,
        });
        var infowindow = new google.maps.InfoWindow({
            content: 'You are here'     
        });
        user_marker.addListener('click', toggleBounce);
        user_marker.addListener('click', function() {
        infowindow.open(map, user_marker);});
        placeMarkers(events);
      }

      function placeMarker(location, event_title, event_venue) {
        var contentString = '<h6><b>'+ event_title +'</b></h6><p>' + 'Venue: '+ event_venue + '</p>'
        var marker = new google.maps.Marker({
          icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
          position: location,
          map: map,
        });
        var infowindow = new google.maps.InfoWindow({
            content: contentString     
        });
        markers.push(marker)
        marker.addListener('click', function() {
        infowindow.open(map, marker);});
      }

      function placeMarkers(events) {
        for (var i = events.length - 1; i >= 0; i--) {
          var location = {lat: JSON.parse(events[i].latitude), lng: JSON.parse(events[i].longitude)}
          var event_title = events[i].name;
          var event_venue = events[i].venue;
          placeMarker(location, event_title, event_venue);
        };
      }

      var user_lat;
      var user_long;
      var userLatLong;
      // var contentString;

      function getLocation() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(showPosition);
        } else {
          alert("Geolocation is not supported by this browser.");
        }
      }

      function showPosition(position){
        user_lat =  position.coords.latitude;
        user_long = position.coords.longitude;
        userLatLong = {lat: user_lat, lng: user_long};
        initMap();
      }

      function toggleBounce() {
        if (user_marker.getAnimation() !== null) {
          user_marker.setAnimation(null);
        } else {
          user_marker.setAnimation(google.maps.Animation.BOUNCE);
        }
      }
  
    </script>

    <script type="text/javascript">
      // Your Client ID can be retrieved from your project in the Google
      // Developer Console, https://console.developers.google.com
      var CLIENT_ID = '402486038680-9up5nbvh55dd2qb9v8emo656pjust331.apps.googleusercontent.com';

      var SCOPES = ["https://www.googleapis.com/auth/calendar.readonly"];

      /**
       * Check if current user has authorized this application.
       */
      function checkAuth() {
        gapi.auth.authorize(
          {
            'client_id': CLIENT_ID,
            'scope': SCOPES.join(' '),
            'immediate': true
          }, handleAuthResult);
      }

      /**
       * Handle response from authorization server.
       *
       * @param {Object} authResult Authorization result.
       */
      function handleAuthResult(authResult) {
        var authorizeDiv = document.getElementById('authorize-div');
        if (authResult && !authResult.error) {
          // Hide auth UI, then load client library.
          authorizeDiv.style.display = 'none';
          loadCalendarApi();
        } else {
          // Show auth UI, allowing the user to initiate authorization by
          // clicking authorize button.
          authorizeDiv.style.display = 'inline';
        }
      }

      /**
       * Initiate auth flow in response to user clicking authorize button.
       *
       * @param {Event} event Button click event.
       */
      function handleAuthClick(event) {
        gapi.auth.authorize(
          {client_id: CLIENT_ID, scope: SCOPES, immediate: false},
          handleAuthResult);
        return false;
      }

      /**
       * Load Google Calendar client library. List upcoming events
       * once client library is loaded.
       */
      function loadCalendarApi() {
        gapi.client.load('calendar', 'v3', listUpcomingEvents);
      }

      /**
       * Print the summary and start datetime/date of the next ten events in
       * the authorized user's calendar. If no events are found an
       * appropriate message is printed.
       */
      function listUpcomingEvents() {
        var request = gapi.client.calendar.events.list({
          'calendarId': 'primary',
          'timeMin': (new Date()).toISOString(),
          'showDeleted': false,
          'singleEvents': true,
          'maxResults': 10,
          'orderBy': 'startTime'
        });

        request.execute(function(resp) {
          var events = resp.items;
          appendPre('Upcoming events:');

          if (events.length > 0) {
            for (i = 0; i < events.length; i++) {
              var event = events[i];
              var when = event.start.dateTime;
              if (!when) {
                when = event.start.date;
              }
              appendPre(event.summary + ' (' + when + ')')
            }
          } else {
            appendPre('No upcoming events found.');
          }

        });
      }

      /**
       * Append a pre element to the body containing the given message
       * as its text node.
       *
       * @param {string} message Text to be placed in pre element.
       */
      function appendPre(message) {
        var pre = document.getElementById('output');
        var textContent = document.createTextNode(message + '\n');
        pre.appendChild(textContent);
      }

    </script>
    <script src="https://apis.google.com/js/client.js?onload=checkAuth">
    </script>


